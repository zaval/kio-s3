name: Release

on:
  push:
    branches: [ "release" ]
    tags: [ "*.*.*" ]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: zavalny/plasma-kio-aws-dev:latest
    steps:
    - uses: actions/checkout@v3
    - name: Set version number
      env:
        BRANCH: ${{ github.ref_name }}
      id: version_number
      run: |
        git config --global --add safe.directory /__w/kio-s3/kio-s3
        tag=$(git describe --tags)
        version=${tag%%-*}
        IFS='.' read -r -a parts <<< $version
        echo "major_version=${parts[0]}" >> $GITHUB_OUTPUT
        echo "minor_version=${parts[1]}" >> $GITHUB_OUTPUT
        echo "patch_version=${parts[2]}" >> $GITHUB_OUTPUT
    - name: Configure CMake
      env:
        MAJOR_VERSION: ${{ steps.version_number.outputs.major_version }}
        MINOR_VERSION: ${{ steps.version_number.outputs.minor_version }}
        PATCH_VERSION: ${{ steps.version_number.outputs.patch_version }}
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release -DAWSSDK_DIR=/home/neon/aws-sdk/lib/cmake/AWSSDK -DCMAKE_PREFIX_PATH=/home/neon/aws-sdk
    - name: Build
      env:
        MAJOR_VERSION: ${{ steps.version_number.outputs.major_version }}
        MINOR_VERSION: ${{ steps.version_number.outputs.minor_version }}
        PATCH_VERSION: ${{ steps.version_number.outputs.patch_version }}
      run: cmake --build build --config ${{env.BUILD_TYPE}}
    - name: CPack
      env:
        MAJOR_VERSION: ${{ steps.version_number.outputs.major_version }}
        MINOR_VERSION: ${{ steps.version_number.outputs.minor_version }}
        PATCH_VERSION: ${{ steps.version_number.outputs.patch_version }}
      run: |
        cd build 
        cpack 
        cp kio-s3-${{ steps.version_number.outputs.major_version }}.${{ steps.version_number.outputs.minor_version }}.${{ steps.version_number.outputs.patch_version }}-Linux.deb ../kio-s3-${{ steps.version_number.outputs.major_version }}.${{ steps.version_number.outputs.minor_version }}.${{ steps.version_number.outputs.patch_version }}-Linux.deb
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.1.4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.version_number.outputs.major_version }}.${{ steps.version_number.outputs.minor_version }}.${{ steps.version_number.outputs.patch_version }}-Linux
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: basefas/upload-release-asset-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.create_release.outputs.id }}
        asset_path: kio-s3-${{ steps.version_number.outputs.major_version }}.${{ steps.version_number.outputs.minor_version }}.${{ steps.version_number.outputs.patch_version }}-Linux.deb
        asset_name: kio-s3-${{ steps.version_number.outputs.major_version }}.${{ steps.version_number.outputs.minor_version }}.${{ steps.version_number.outputs.patch_version }}-Linux.deb
