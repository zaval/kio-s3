name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  PATCH_VERSION: ${{ github.run_id }}

jobs:
  build:
    runs-on: ubuntu-latest
    container: 
      image: zavalny/plasma-kio-aws-dev:latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DAWSSDK_DIR=/home/neon/aws-sdk/lib/cmake/AWSSDK -DCMAKE_PREFIX_PATH=/home/neon/aws-sdk

    - name: Build
      env:
        PATCH_VERSION: ${{ github.run_id }}
      run: cmake --build build --config ${{env.BUILD_TYPE}}

    - name: CPack
      run: |
        cd build 
        cpack 
        cp kio-s3-1.0.${{ github.run_id }}-Linux.deb ../kio-s3-1.0.${{ github.run_id }}-Linux.deb

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: S3-KIO
        path: ./kio-s3-1.0.${{ github.run_id }}-Linux.deb

#    - name: Create Release
#      id: create_release
#      uses: actions/create-release@v1.1.4
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        tag_name: ${{ github.ref }}
#        release_name: Release 1.0.${{ github.run_id }}
#        draft: false
#        prerelease: false
#
#    - name: Upload Release Asset
#      id: upload-release-asset
#      uses: basefas/upload-release-asset-action@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        release_id: ${{ steps.create_release.outputs.id }}
#        asset_path: ./build/kio-s3-1.0.${{ github.run_id }}-Linux.deb
#        asset_name: kio-s3-1.0.${{ github.run_id }}-Linux.deb
#        asset_content_type: application/vnd.debian.binary-package
#
